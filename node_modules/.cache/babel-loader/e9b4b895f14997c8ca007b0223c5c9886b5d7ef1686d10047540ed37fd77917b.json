{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0,\n  cart: [],\n  supplier: '',\n  shippingDate: '',\n  department: '',\n  status: '',\n  loadingStatus: {},\n  dataFetchedFor: {},\n  isOrderApproved: false\n};\nexport const orderSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n    updateLoadingStatus: (state, action) => {\n      const {\n        type,\n        value\n      } = action.payload;\n      state.loadingStatus[type] = value;\n    },\n    updateDataFetchedFor: (state, action) => {\n      const {\n        type,\n        value\n      } = action.payload;\n      state.dataFetchedFor[type] = value;\n    },\n    updateFetchedOrderDetails: (state, action) => {\n      const {\n        supplier,\n        shippingDate,\n        cart,\n        department,\n        status\n      } = action.payload;\n      state.supplier = supplier;\n      state.shippingDate = shippingDate;\n      state.cart = cart;\n      state.department = department;\n      state.status = status;\n    },\n    approveItem: (state, action) => {\n      const {\n        item: {\n          uuid\n        },\n        approved\n      } = action.payload;\n      state.cart = state.cart.map(eachItem => {\n        if (eachItem.uuid === uuid) {\n          eachItem.approved = approved;\n          eachItem.missing = false;\n          eachItem.urgent = false;\n        }\n        return eachItem;\n      });\n    },\n    updateMissingItem: (state, action) => {\n      const {\n        item: {\n          uuid\n        },\n        missing,\n        urgent\n      } = action.payload;\n      state.cart = state.cart.map(eachItem => {\n        if (eachItem.uuid === uuid) {\n          eachItem.missing = missing;\n          eachItem.urgent = urgent;\n          eachItem.approved = false;\n        }\n        return eachItem;\n      });\n    },\n    updateCartAfterEdit: (state, action) => {\n      const {\n        item: {\n          uuid\n        },\n        price,\n        quantity,\n        reasons\n      } = action.payload;\n      state.cart = state.cart.map(eachItem => {\n        if (eachItem.uuid === uuid) {\n          eachItem.price = price;\n          eachItem.quantity = quantity;\n          eachItem.reasons = reasons;\n          if (!reasons.includes('Missing Product')) eachItem.approved = true;\n        }\n        return eachItem;\n      });\n    },\n    addProductsToCart: (state, action) => {\n      const {\n        products\n      } = action.payload;\n      state.cart = [...state.cart, ...products.map(eachProduct => {\n        eachProduct.missing = false;\n        eachProduct.urgent = false;\n        eachProduct.approved = true;\n        eachProduct.originalPrice = eachProduct.price;\n        eachProduct.originalQuantity = eachProduct.quantity;\n        return eachProduct;\n      })];\n    },\n    approveOrder: (state, action) => {\n      state.status = 'Approved';\n      state.isOrderApproved = true;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  updateLoadingStatus,\n  updateDataFetchedFor,\n  updateFetchedOrderDetails,\n  approveItem,\n  updateMissingItem,\n  updateCartAfterEdit,\n  addProductsToCart,\n  approveOrder\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","cart","supplier","shippingDate","department","status","loadingStatus","dataFetchedFor","isOrderApproved","orderSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","updateLoadingStatus","type","updateDataFetchedFor","updateFetchedOrderDetails","approveItem","item","uuid","approved","map","eachItem","missing","urgent","updateMissingItem","updateCartAfterEdit","price","quantity","reasons","includes","addProductsToCart","products","eachProduct","originalPrice","originalQuantity","approveOrder","actions","reducer"],"sources":["/Users/arideepdutta/Downloads/reeco/src/redux/orderSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  value: 0,\n  cart: [],\n  supplier: '',\n  shippingDate: '',\n  department: '',\n  status: '',\n  loadingStatus: {},\n  dataFetchedFor: {},\n  isOrderApproved: false,\n}\n\nexport const orderSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    },\n    updateLoadingStatus: (state, action) => {\n      const { type, value } = action.payload\n      state.loadingStatus[type] = value\n    },\n    updateDataFetchedFor: (state, action) => {\n      const { type, value } = action.payload\n      state.dataFetchedFor[type] = value\n    },\n    updateFetchedOrderDetails: (state, action) => {\n      const { supplier, shippingDate, cart, department, status } = action.payload\n      state.supplier = supplier\n      state.shippingDate = shippingDate\n      state.cart = cart\n      state.department = department\n      state.status = status\n    },\n    approveItem: (state, action) => {\n      const { item: { uuid }, approved } = action.payload\n      state.cart = state.cart.map(eachItem => {\n        if (eachItem.uuid === uuid) {\n          eachItem.approved = approved\n          eachItem.missing = false\n          eachItem.urgent = false\n        }\n        return eachItem\n      })\n    },\n    updateMissingItem: (state, action) => {\n      const { item: { uuid }, missing, urgent } = action.payload\n      state.cart = state.cart.map(eachItem => {\n        if (eachItem.uuid === uuid) {\n          eachItem.missing = missing\n          eachItem.urgent = urgent\n          eachItem.approved = false\n        }\n        return eachItem\n      })\n    },\n    updateCartAfterEdit: (state, action) => {\n      const { item: { uuid }, price, quantity, reasons } = action.payload\n      state.cart = state.cart.map(eachItem => {\n        if (eachItem.uuid === uuid) {\n          eachItem.price = price\n          eachItem.quantity = quantity\n          eachItem.reasons = reasons\n          if (!reasons.includes('Missing Product')) eachItem.approved = true\n        }\n        return eachItem\n      })\n    },\n    addProductsToCart: (state, action) => {\n      const { products } = action.payload\n      state.cart = [...state.cart, ...products.map(eachProduct => {\n        eachProduct.missing = false\n        eachProduct.urgent = false\n        eachProduct.approved = true\n        eachProduct.originalPrice = eachProduct.price\n        eachProduct.originalQuantity = eachProduct.quantity\n        return eachProduct\n      })]\n    },\n    approveOrder: (state, action) => {\n      state.status = 'Approved'\n      state.isOrderApproved = true\n    }\n  },\n})\n\nexport const { increment, decrement, incrementByAmount, updateLoadingStatus, updateDataFetchedFor, updateFetchedOrderDetails, approveItem, updateMissingItem, updateCartAfterEdit, addProductsToCart, approveOrder } = orderSlice.actions\n\nexport default orderSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}