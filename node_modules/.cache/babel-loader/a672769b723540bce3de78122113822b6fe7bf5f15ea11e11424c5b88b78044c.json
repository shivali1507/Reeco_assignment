{"ast":null,"code":"export const orderSummary = {\n  supplier: {\n    title: \"Supplier\",\n    value: \"East coast fruits & vegetables\"\n  },\n  shippingDate: {\n    title: \"Shipping date\",\n    value: \"Thu, Feb 10\"\n  },\n  total: {\n    title: \"Total\",\n    value: \"$ 15,028.3\"\n  },\n  category: {\n    title: \"Category\",\n    value: [\"fruits\", \"meat\", \"vegetables\"],\n    icons: true\n  },\n  department: {\n    title: \"Department\",\n    value: \"300-444-678\"\n  },\n  status: {\n    title: \"Status\",\n    value: \"Awaiting your approvel\"\n  }\n};\nexport const orderDetails = {\n  supplier: \"East coast fruits & vegetables\",\n  shippingDate: \"Thu, Feb 10\",\n  cart: [{\n    name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n    brand: \"Enim diam\",\n    price: 60.67,\n    unit: \"6 * 1LB\",\n    quantity: 0,\n    status: [],\n    category: \"fruit\",\n    approved: false,\n    missing: false,\n    urgent: false\n  }, {\n    name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n    brand: \"Enim diam\",\n    price: 60.67,\n    unit: \"6 * 1LB\",\n    quantity: 15,\n    originalQuantity: 12,\n    status: [],\n    category: \"fruit\",\n    approved: true,\n    missing: false,\n    urgent: false,\n    reasons: [\"Quality is not the same\"]\n  }, {\n    name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n    brand: \"Enim diam\",\n    price: 60.67,\n    unit: \"6 * 1LB\",\n    quantity: 7,\n    status: [],\n    category: \"meat\",\n    approved: false,\n    missing: false,\n    urgent: false\n  }, {\n    name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n    brand: \"Enim diam\",\n    price: 60.67,\n    originalPrice: 54,\n    unit: \"6 * 1LB\",\n    quantity: 18,\n    status: [],\n    category: \"fruit\",\n    approved: true,\n    missing: false,\n    urgent: false,\n    reasons: [\"Price is not the same\"]\n  }],\n  department: \"300-444-678\",\n  status: \"Awaiting your approval\"\n};\nexport const getCatalog = (value = \"\") => {\n  let arr = new Array(5).fill(\"1\");\n  if (![\"fish\", \"beef\", \"chicken\"].includes(value.toString().toLowerCase())) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve([]);\n      }, 1000);\n    });\n  }\n  let result = arr.map((key, index) => {\n    return {\n      uuid: crypto.randomUUID(),\n      name: `${value}, Ground free fall, 80% Lean, Fresh ${value}, Ground dish ${index + 1}`,\n      brand: \"Enim diam\",\n      unit: \"6 * 1LB\",\n      price: Math.floor(Math.random() * (15 - 6 + 1)) + 6,\n      quantity: 0,\n      reasons: []\n    };\n  });\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(result);\n    }, 1000);\n  });\n};","map":{"version":3,"names":["orderSummary","supplier","title","value","shippingDate","total","category","icons","department","status","orderDetails","cart","name","brand","price","unit","quantity","approved","missing","urgent","originalQuantity","reasons","originalPrice","getCatalog","arr","Array","fill","includes","toString","toLowerCase","Promise","resolve","reject","setTimeout","result","map","key","index","uuid","crypto","randomUUID","Math","floor","random"],"sources":["/Users/arideepdutta/Downloads/reeco/src/jsonData/index.js"],"sourcesContent":["export const orderSummary = {\n  supplier: {\n    title: \"Supplier\",\n    value: \"East coast fruits & vegetables\",\n  },\n  shippingDate: {\n    title: \"Shipping date\",\n    value: \"Thu, Feb 10\",\n  },\n  total: {\n    title: \"Total\",\n    value: \"$ 15,028.3\",\n  },\n  category: {\n    title: \"Category\",\n    value: [\"fruits\", \"meat\", \"vegetables\"],\n    icons: true,\n  },\n  department: {\n    title: \"Department\",\n    value: \"300-444-678\",\n  },\n  status: {\n    title: \"Status\",\n    value: \"Awaiting your approvel\",\n  },\n};\n\nexport const orderDetails = {\n  supplier: \"East coast fruits & vegetables\",\n  shippingDate: \"Thu, Feb 10\",\n  cart: [\n    {\n      name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n      brand: \"Enim diam\",\n      price: 60.67,\n      unit: \"6 * 1LB\",\n      quantity: 0,\n      status: [],\n      category: \"fruit\",\n      approved: false,\n      missing: false,\n      urgent: false,\n    },\n    {\n      name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n      brand: \"Enim diam\",\n      price: 60.67,\n      unit: \"6 * 1LB\",\n      quantity: 15,\n      originalQuantity: 12,\n      status: [],\n      category: \"fruit\",\n      approved: true,\n      missing: false,\n      urgent: false,\n      reasons: [\"Quality is not the same\"],\n    },\n    {\n      name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n      brand: \"Enim diam\",\n      price: 60.67,\n      unit: \"6 * 1LB\",\n      quantity: 7,\n      status: [],\n      category: \"meat\",\n      approved: false,\n      missing: false,\n      urgent: false,\n    },\n    {\n      name: \"Chicken breast fillets, Boneless marinated 6 Ounce Raw, Invivid\",\n      brand: \"Enim diam\",\n      price: 60.67,\n      originalPrice: 54,\n      unit: \"6 * 1LB\",\n      quantity: 18,\n      status: [],\n      category: \"fruit\",\n      approved: true,\n      missing: false,\n      urgent: false,\n      reasons: [\"Price is not the same\"],\n    },\n  ],\n  department: \"300-444-678\",\n  status: \"Awaiting your approval\",\n};\n\nexport const getCatalog = (value = \"\") => {\n  let arr = new Array(5).fill(\"1\");\n  if (![\"fish\", \"beef\", \"chicken\"].includes(value.toString().toLowerCase())) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve([]);\n      }, 1000);\n    });\n  }\n  let result = arr.map((key, index) => {\n    return {\n      uuid: crypto.randomUUID(),\n      name: `${value}, Ground free fall, 80% Lean, Fresh ${value}, Ground dish ${\n        index + 1\n      }`,\n      brand: \"Enim diam\",\n      unit: \"6 * 1LB\",\n      price: Math.floor(Math.random() * (15 - 6 + 1)) + 6,\n      quantity: 0,\n      reasons: [],\n    };\n  });\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(result);\n    }, 1000);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}