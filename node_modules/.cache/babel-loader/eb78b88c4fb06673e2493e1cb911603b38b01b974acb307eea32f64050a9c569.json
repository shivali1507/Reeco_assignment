{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateDataFetchedFor, updateFetchedOrderDetails, updateLoadingStatus } from \"../../redux-store/orderSlice\";\nimport { fetchOrderDetails } from \"../../api/fetchOrderDetails\";\nexport const useOrderContentsLogic = () => {\n  _s();\n  const unfilteredCart = useSelector(state => state.orders.cart);\n  const [searchText, setSearchText] = useState(\"\");\n  const dispatch = useDispatch();\n  const [cart, setCart] = useState([]);\n  const [showModal, setShowModal] = React.useState(false);\n  useEffect(() => {\n    updateFilteredCart();\n  }, [unfilteredCart]);\n  const updateFilteredCart = value => {\n    let text = typeof value === \"string\" ? value : searchText;\n    if (!text.length) {\n      setCart(unfilteredCart);\n      return;\n    }\n    setCart(unfilteredCart.filter(item => {\n      return item.name.toLowerCase().includes(text.toLowerCase()) || item.brand.toLowerCase().includes(text.toLowerCase());\n    }));\n  };\n  useEffect(() => {\n    async function fetchData() {\n      dispatch(updateLoadingStatus({\n        type: \"orderDetails\",\n        value: true\n      }));\n      const response = await fetchOrderDetails();\n      dispatch(updateLoadingStatus({\n        type: \"orderDetails\",\n        value: false\n      }));\n      dispatch(updateDataFetchedFor({\n        type: \"orderDetails\",\n        value: true\n      }));\n      dispatch(updateFetchedOrderDetails(response));\n    }\n    fetchData();\n  }, []);\n  return {\n    unfilteredCart,\n    searchText,\n    cart,\n    showModal,\n    updateFilteredCart,\n    setSearchText,\n    setShowModal\n  };\n};\n_s(useOrderContentsLogic, \"S5eWMKQapYufZBnV3U1siqJZGRY=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","updateDataFetchedFor","updateFetchedOrderDetails","updateLoadingStatus","fetchOrderDetails","useOrderContentsLogic","_s","unfilteredCart","state","orders","cart","searchText","setSearchText","dispatch","setCart","showModal","setShowModal","updateFilteredCart","value","text","length","filter","item","name","toLowerCase","includes","brand","fetchData","type","response"],"sources":["/Users/arideepdutta/Downloads/reeco/src/orders/orderContents/useOrderContents.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  updateDataFetchedFor,\n  updateFetchedOrderDetails,\n  updateLoadingStatus,\n} from \"../../redux-store/orderSlice\";\nimport { fetchOrderDetails } from \"../../api/fetchOrderDetails\";\n\nexport const useOrderContentsLogic = () => {\n  const unfilteredCart = useSelector((state) => state.orders.cart);\n  const [searchText, setSearchText] = useState(\"\");\n  const dispatch = useDispatch();\n  const [cart, setCart] = useState([]);\n  const [showModal, setShowModal] = React.useState(false);\n\n  useEffect(() => {\n    updateFilteredCart();\n  }, [unfilteredCart]);\n\n  const updateFilteredCart = (value) => {\n    let text = typeof value === \"string\" ? value : searchText;\n    if (!text.length) {\n      setCart(unfilteredCart);\n      return;\n    }\n    setCart(\n      unfilteredCart.filter((item) => {\n        return (\n          item.name.toLowerCase().includes(text.toLowerCase()) ||\n          item.brand.toLowerCase().includes(text.toLowerCase())\n        );\n      })\n    );\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      dispatch(updateLoadingStatus({ type: \"orderDetails\", value: true }));\n      const response = await fetchOrderDetails();\n      dispatch(updateLoadingStatus({ type: \"orderDetails\", value: false }));\n      dispatch(updateDataFetchedFor({ type: \"orderDetails\", value: true }));\n      dispatch(updateFetchedOrderDetails(response));\n    }\n    fetchData();\n  }, []);\n\n  return {\n    unfilteredCart,\n    searchText,\n    cart,\n    showModal,\n    updateFilteredCart,\n    setSearchText,\n    setShowModal,\n  };\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,oBAAoB,EACpBC,yBAAyB,EACzBC,mBAAmB,QACd,8BAA8B;AACrC,SAASC,iBAAiB,QAAQ,6BAA6B;AAE/D,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAMC,cAAc,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,IAAI,CAAC;EAChE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,IAAI,EAAEI,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,KAAK,CAACE,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACdoB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACV,cAAc,CAAC,CAAC;EAEpB,MAAMU,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIC,IAAI,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGP,UAAU;IACzD,IAAI,CAACQ,IAAI,CAACC,MAAM,EAAE;MAChBN,OAAO,CAACP,cAAc,CAAC;MACvB;IACF;IACAO,OAAO,CACLP,cAAc,CAACc,MAAM,CAAEC,IAAI,IAAK;MAC9B,OACEA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,IACpDF,IAAI,CAACI,KAAK,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC;IAEzD,CAAC,CACH,CAAC;EACH,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd,eAAe8B,SAASA,CAAA,EAAG;MACzBd,QAAQ,CAACV,mBAAmB,CAAC;QAAEyB,IAAI,EAAE,cAAc;QAAEV,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;MACpE,MAAMW,QAAQ,GAAG,MAAMzB,iBAAiB,CAAC,CAAC;MAC1CS,QAAQ,CAACV,mBAAmB,CAAC;QAAEyB,IAAI,EAAE,cAAc;QAAEV,KAAK,EAAE;MAAM,CAAC,CAAC,CAAC;MACrEL,QAAQ,CAACZ,oBAAoB,CAAC;QAAE2B,IAAI,EAAE,cAAc;QAAEV,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;MACrEL,QAAQ,CAACX,yBAAyB,CAAC2B,QAAQ,CAAC,CAAC;IAC/C;IACAF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLpB,cAAc;IACdI,UAAU;IACVD,IAAI;IACJK,SAAS;IACTE,kBAAkB;IAClBL,aAAa;IACbI;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CA/CWD,qBAAqB;EAAA,QACTL,WAAW,EAEjBD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}