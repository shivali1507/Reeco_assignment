{"ast":null,"code":"export const orderSummary = {\n  supplier: {\n    title: \"Supplier\",\n    value: \"Fresho\"\n  },\n  shippingDate: {\n    title: \"Delivery date\",\n    value: \"Tue, Sep 27\"\n  },\n  total: {\n    title: \"Total\",\n    value: \"Rs. 15,028.3\"\n  },\n  department: {\n    title: \"Department\",\n    value: \"Delivery\"\n  },\n  status: {\n    title: \"Status\",\n    value: \"Awaiting your approval\"\n  }\n};\nexport const orderDetails = {\n  supplier: \"Fesho\",\n  shippingDate: \"Tue, Sep 27\",\n  cart: [{\n    name: \"Banana\",\n    brand: \"Robusta\",\n    price: 38,\n    unit: \"38 * 1Kg\",\n    quantity: 12,\n    status: [],\n    category: \"fruit\",\n    approved: false,\n    missing: false,\n    urgent: false\n  }, {\n    name: \"Apple\",\n    brand: \"Shimla\",\n    price: 93,\n    unit: \"93 * 1Kg\",\n    quantity: 15,\n    originalQuantity: 12,\n    status: [],\n    category: \"fruit\",\n    approved: true,\n    missing: false,\n    urgent: false,\n    reasons: [\"Quality is not the same\"]\n  }, {\n    name: \"Chicken Biryani\",\n    brand: \"Behrouz\",\n    price: 210,\n    unit: \"210 * 1Kg\",\n    quantity: 7,\n    status: [],\n    category: \"meat\",\n    approved: false,\n    missing: false,\n    urgent: false\n  }, {\n    name: \"Pomegranate - Regular\",\n    brand: \"Fresho\",\n    price: 154,\n    originalPrice: 139,\n    unit: \"154 * 1Kg\",\n    quantity: 18,\n    status: [],\n    category: \"fruit\",\n    approved: true,\n    missing: false,\n    urgent: false,\n    reasons: [\"Price is not the same\"]\n  }],\n  department: \"BigBasket\",\n  status: \"Awaiting your approval\"\n};\nexport const getCatalog = (value = \"\") => {\n  let arr = new Array(5).fill(\"1\");\n  if (![\"fish\", \"beef\", \"chicken\"].includes(value.toString().toLowerCase())) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve([]);\n      }, 1000);\n    });\n  }\n  let result = arr.map((key, index) => {\n    return {\n      uuid: crypto.randomUUID(),\n      name: `${value}, Ground free fall, 80% Lean, Fresh ${value}, Ground dish ${index + 1}`,\n      brand: \"Enim diam\",\n      unit: \"6 * 1LB\",\n      price: Math.floor(Math.random() * (15 - 6 + 1)) + 6,\n      quantity: 0,\n      reasons: []\n    };\n  });\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(result);\n    }, 1000);\n  });\n};","map":{"version":3,"names":["orderSummary","supplier","title","value","shippingDate","total","department","status","orderDetails","cart","name","brand","price","unit","quantity","category","approved","missing","urgent","originalQuantity","reasons","originalPrice","getCatalog","arr","Array","fill","includes","toString","toLowerCase","Promise","resolve","reject","setTimeout","result","map","key","index","uuid","crypto","randomUUID","Math","floor","random"],"sources":["/Users/arideepdutta/Downloads/reeco/src/data/data.js"],"sourcesContent":["export const orderSummary = {\n  supplier: {\n    title: \"Supplier\",\n    value: \"Fresho\",\n  },\n  shippingDate: {\n    title: \"Delivery date\",\n    value: \"Tue, Sep 27\",\n  },\n  total: {\n    title: \"Total\",\n    value: \"Rs. 15,028.3\",\n  },\n  department: {\n    title: \"Department\",\n    value: \"Delivery\",\n  },\n  status: {\n    title: \"Status\",\n    value: \"Awaiting your approval\",\n  },\n};\n\nexport const orderDetails = {\n  supplier: \"Fesho\",\n  shippingDate: \"Tue, Sep 27\",\n  cart: [\n    {\n      name: \"Banana\",\n      brand: \"Robusta\",\n      price: 38,\n      unit: \"38 * 1Kg\",\n      quantity: 12,\n      status: [],\n      category: \"fruit\",\n      approved: false,\n      missing: false,\n      urgent: false,\n    },\n    {\n      name: \"Apple\",\n      brand: \"Shimla\",\n      price: 93,\n      unit: \"93 * 1Kg\",\n      quantity: 15,\n      originalQuantity: 12,\n      status: [],\n      category: \"fruit\",\n      approved: true,\n      missing: false,\n      urgent: false,\n      reasons: [\"Quality is not the same\"],\n    },\n    {\n      name: \"Chicken Biryani\",\n      brand: \"Behrouz\",\n      price: 210,\n      unit: \"210 * 1Kg\",\n      quantity: 7,\n      status: [],\n      category: \"meat\",\n      approved: false,\n      missing: false,\n      urgent: false,\n    },\n    {\n      name: \"Pomegranate - Regular\",\n      brand: \"Fresho\",\n      price: 154,\n      originalPrice: 139,\n      unit: \"154 * 1Kg\",\n      quantity: 18,\n      status: [],\n      category: \"fruit\",\n      approved: true,\n      missing: false,\n      urgent: false,\n      reasons: [\"Price is not the same\"],\n    },\n  ],\n  department: \"BigBasket\",\n  status: \"Awaiting your approval\",\n};\n\nexport const getCatalog = (value = \"\") => {\n  let arr = new Array(5).fill(\"1\");\n  if (![\"fish\", \"beef\", \"chicken\"].includes(value.toString().toLowerCase())) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve([]);\n      }, 1000);\n    });\n  }\n  let result = arr.map((key, index) => {\n    return {\n      uuid: crypto.randomUUID(),\n      name: `${value}, Ground free fall, 80% Lean, Fresh ${value}, Ground dish ${\n        index + 1\n      }`,\n      brand: \"Enim diam\",\n      unit: \"6 * 1LB\",\n      price: Math.floor(Math.random() * (15 - 6 + 1)) + 6,\n      quantity: 0,\n      reasons: [],\n    };\n  });\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(result);\n    }, 1000);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}