{"ast":null,"code":"import { orderDetails } from \"../data/data\";\nexport const fetchOrderDetails = () => {\n  return new Promise((resolve, reject) => {\n    orderDetails.cart = orderDetails.cart.map(item => {\n      return {\n        ...item,\n        originalPrice: item.originalPrice || item.price,\n        originalQuantity: item.originalQuantity || item.quantity,\n        uuid: crypto.randomUUID()\n      };\n    });\n    setTimeout(() => {\n      resolve(orderDetails);\n    }, 1500);\n  });\n};","map":{"version":3,"names":["orderDetails","fetchOrderDetails","Promise","resolve","reject","cart","map","item","originalPrice","price","originalQuantity","quantity","uuid","crypto","randomUUID","setTimeout"],"sources":["/Users/arideepdutta/Downloads/reeco/src/utils/fetchOrderDetails.js"],"sourcesContent":["import { orderDetails } from \"../data/data\"\n\nexport const fetchOrderDetails = () => {\n  return new Promise((resolve, reject) => {\n    orderDetails.cart = orderDetails.cart.map(item => {\n      return {\n        ...item,\n        originalPrice: item.originalPrice || item.price,\n        originalQuantity: item.originalQuantity || item.quantity,\n        uuid: crypto.randomUUID()\n      }\n    })\n    setTimeout(() => {\n      resolve(orderDetails)\n    }, 1500);\n  })\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAE3C,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCJ,YAAY,CAACK,IAAI,GAAGL,YAAY,CAACK,IAAI,CAACC,GAAG,CAACC,IAAI,IAAI;MAChD,OAAO;QACL,GAAGA,IAAI;QACPC,aAAa,EAAED,IAAI,CAACC,aAAa,IAAID,IAAI,CAACE,KAAK;QAC/CC,gBAAgB,EAAEH,IAAI,CAACG,gBAAgB,IAAIH,IAAI,CAACI,QAAQ;QACxDC,IAAI,EAAEC,MAAM,CAACC,UAAU,CAAC;MAC1B,CAAC;IACH,CAAC,CAAC;IACFC,UAAU,CAAC,MAAM;MACfZ,OAAO,CAACH,YAAY,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}